<?xml version="1.0"?>

<!DOCTYPE web-app PUBLIC
  "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
  "http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

    <display-name>ICEfaces Address: Intelligent form demo</display-name>
    <description>
        ICEfaces Address Demo
    </description>

    <context-param>
        <param-name>javax.faces.STATE_SAVING_METHOD</param-name>
        <param-value>server</param-value>
    </context-param>
    
    <context-param>
        <param-name>javax.faces.application.CONFIG_FILES</param-name>
        <param-value>/WEB-INF/faces-config.xml</param-value>
    </context-param>

    <context-param>
        <param-name>com.sun.faces.validateXml</param-name>
        <param-value>true</param-value>
    </context-param>

<!-- Specifies to the ICEfaces framework that synchronous update mode is to be 
     used.  By default, ICEfaces uses asynchronous update mode to support 
     server-initiated updates (AJAX push).  Setting to true will enable 
     synchronous update mode and disable AJAX push features. -->
    <context-param>
        <param-name>com.icesoft.faces.synchronousUpdate</param-name>
        <param-value>true</param-value>
    </context-param>
    
<!-- Specifies to the ICEfaces framework whether to compress the server-side DOM 
     representation after each response. This saves a considerable amount of
     of memory per client. However, since this is decompressed/compressed for
     every update, it may not bring significant memory savings to applications 
     that make frequent use of AJAX push.
    <context-param>
        <param-name>com.icesoft.faces.compressDOM</param-name>
        <param-value>true</param-value>
    </context-param> -->

<!-- Specifies the amount of time in milliseconds that the bridge will wait for  
     a response from the server for a user-initiated request before declaring 
     the connection lost.  Un-comment and change the default value, if necessary.    
    <context-param>
        <param-name>com.icesoft.faces.connectionTimeout</param-name>
        <param-value>60000</param-value>
    </context-param>
-->

<!-- Specifies to the ICEfaces framework whether to support multiple views of a 
     single application from the same browser.  When running in a Portlet 
     environment, this parameter must be set to true.  Un-comment and change the 
     default value, if necessary.
    <context-param>
        <param-name>com.icesoft.faces.concurrentDOMViews</param-name>
        <param-value>FALSE</param-value>
    </context-param>
-->

    <context-param>
      <param-name>javax.faces.DEFAULT_SUFFIX</param-name>
      <param-value>.jspx</param-value>
    </context-param>

<!-- ConfigureListener is not generally required. Due to an apparent bug in 
     Tomcat users have reported seeing the following error "SEVERE: ICEfaces 
     could not initialize JavaServer Faces. Please check that the JSF .jar files 
     are installed correctly.". Specifying the ConfigureListener resolves the 
     issue. 
    <listener> 
        <listener-class>com.sun.faces.config.ConfigureListener</listener-class> 
    </listener>
--> 

	<listener>
		<listener-class>com.icesoft.faces.util.event.servlet.ContextEventRepeater</listener-class>
	</listener>

    <!-- Faces Servlet -->
    <servlet>
        <servlet-name>Faces Servlet</servlet-name>
        <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
        <load-on-startup> 1 </load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>Persistent Faces Servlet</servlet-name>
        <servlet-class>com.icesoft.faces.webapp.xmlhttp.PersistentFacesServlet</servlet-class>
        <load-on-startup> 1 </load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>Blocking Servlet</servlet-name>
        <servlet-class>com.icesoft.faces.webapp.xmlhttp.BlockingServlet</servlet-class>
        <load-on-startup> 1 </load-on-startup>
    </servlet>

    <!-- Faces Servlet Mapping -->
    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>*.face</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>*.jspx</url-pattern>
    </servlet-mapping>

    <!-- Persistent Faces Servlet Mapping -->
    <servlet-mapping>
        <servlet-name>Persistent Faces Servlet</servlet-name>
        <url-pattern>*.iface</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>Persistent Faces Servlet</servlet-name>
        <url-pattern>/xmlhttp/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>Blocking Servlet</servlet-name>
        <url-pattern>/block/*</url-pattern>
    </servlet-mapping>

    <session-config>
      <session-timeout>30</session-timeout>
    </session-config>

    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

</web-app>
